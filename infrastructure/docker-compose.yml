version: "3.7"

volumes:
    portainer:
    heimdall:
    homepage:

services:
    portainer:
        image: portainer/portainer-ce
        restart: always
        container_name: portainer
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - 'portainer:/data'
        ports:
            - 9000:9000
        networks: 
            - proxy
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.portainer.rule=Host(`portainer.l3s.io`)"
            - "traefik.http.services.portainer.loadbalancer.server.port=9000"
            - "traefik.http.routers.portainer.entrypoints=websecure"
            - "traefik.http.routers.portainer.middlewares=auth"
           
    bivac:
        image: ghcr.io/camptocamp/bivac:2.5
        command: manager
        container_name: bivac
        networks: 
            - proxy
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        environment:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
            RESTIC_PASSWORD: $RESTIC_PASSWORD
            BIVAC_TARGET_URL: s3:https://s3.amazonaws.com/me.patzke.docker-backup
            BIVAC_SERVER_PSK: $BIVAC_SERVER_PSK
            BIVAC_AGENT_IMAGE: ghcr.io/camptocamp/bivac:2.5
            BIVAC_LOG_SERVER: https://bivac.l3s.io
            BIVAC_PARALLEL_COUNT: 4
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.bivac.rule=Host(`bivac.l3s.io`)"
            - "traefik.http.services.bivac.loadbalancer.server.port=8182"
            - "traefik.http.routers.bivac.entrypoints=websecure"
            - "traefik.http.routers.bivac.middlewares=local-ip"

    watchtower:
        image: containrrr/watchtower
        restart: always
        container_name: watchtower
        environment: 
            - WATCHTOWER_MONITOR_ONLY=true
            - WATCHTOWER_NOTIFICATION_EMAIL_FROM=Watchtower
            - WATCHTOWER_NOTIFICATION_EMAIL_TO=lukas@patzke.me
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=hosted.mailcow.de
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=465
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=watchtower@patzke.me
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=$WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /etc/timezone:/etc/timezone:ro
        command: --schedule "0 0 3 * * *"

    heimdall:
        image: linuxserver/heimdall
        container_name: heimdall
        restart: unless-stopped
        networks: 
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/Berlin
        volumes:
            - heimdall:/config
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.heimdall.rule=Host(`heimdall.l3s.io`)"
            - "traefik.http.services.heimdall.loadbalancer.server.port=80"
            - "traefik.http.routers.heimdall.entrypoints=websecure"
            - "traefik.http.routers.heimdall.middlewares=auth"
    
    homepage:
        image: lukaspatzke/homepage:edge
        container_name: homepage
        restart: always
        networks: 
            - proxy
        volumes:
            - homepage:/data
        environment:
            - TZ=Europe/Berlin
            - DB_CONN=sqlite:////data/db.sqlite
            - SIGNOUT_REDIRECT_URL=https://sso.l3s.io/auth/realms/l3s/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fforward.sso.l3s.io%2F_oauth%2Flogout
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.homepage.rule=Host(`l3s.io`)"
            - "traefik.http.routers.homepage.entrypoints=websecure"
            - "traefik.http.routers.homepage.middlewares=auth"

    speedtest:
        image: openspeedtest/latest
        container_name: speedtest
        restart: unless-stopped
        networks: 
            - proxy
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.speedtest.rule=Host(`speedtest.l3s.io`)"
            - "traefik.http.routers.speedtest.entrypoints=websecure"
            - "traefik.http.routers.speedtest.middlewares=local-ip"
        
networks:
    proxy:
        external: true
