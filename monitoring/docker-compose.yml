version: "3.7"

volumes:
    grafana:
    prometheus: 
    loki:
    minio:
        
services:
    grafana:
        image: grafana/grafana:9.0.7
        container_name: grafana
        restart: always
        user: "1000"
        networks:
            - proxy
            - default
        volumes:
            - grafana:/var/lib/grafana
        environment:
            GF_SERVER_ROOT_URL: https://grafana.l3s.io/
            GF_SERVER_DOMAIN: grafana.l3s.io
            GF_SESSION_COOKIE_SECURE: "true"
            GF_USERS_AUTO_ASSIGN_ORG: "true"
            GF_AUTH_ANONYMOUS_ENABLED: "false"
            GF_AUTH_BASIC_ENABLED: "false"
            GF_AUTH_PROXY_ENABLED: "false"
            GF_AUTH_PROXY_HEADER_NAME: "X-Forwarded-User"
            GF_AUTH_PROXY_HEADER_PROPERTY: email
            GF_AUTH_PROXY_AUTO_SIGN_UP: "true"
            GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
            GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
            GF_AUTH_GENERIC_OAUTH_NAME: "Keycloak"
            GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
            GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: $GRAFANA_CLIENT_SECRET
            GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email roles
            GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_STRICT: "true"
            GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: contains(resource_access.grafana.roles[*],
                'grafana_admin') && 'Admin' ||
                contains(resource_access.grafana.roles[*], 'grafana_editor') && 'Editor' ||
                contains(resource_access.grafana.roles[*], 'grafana_viewer') &&
                'Viewer'
            GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.l3s.io/realms/l3s/protocol/o\
                penid-connect/auth"
            GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.l3s.io/realms/l3s/protocol/\
                openid-connect/token"
            GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.l3s.io/realms/l3s/protocol/op\
                enid-connect/userinfo"
            GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.l3s.io/realms/l3s/protocol/ope\
                nid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.l3s.io"
            GF_SMTP_ENABLED: "true"
            GF_SMTP_HOST: hosted.mailcow.de:465
            GF_SMTP_USER: grafana@patzke.me
            GF_SMTP_PASSWORD: $SMTP_PASSWORD
            GF_SMTP_FROM_ADDRESS: grafana@patzke.me
            GF_RENDERING_SERVER_URL: http://grafana-renderer:8081/render
            GF_RENDERING_CALLBACK_URL: http://grafana:3000/
            GF_LOG_FILTERS: rendering:debug
            GF_PANELS_DISABLE_SANITIZE_HTML: "true"
            GF_INSTALL_PLUGINS: "https://github.com/LukasPatzke/grafana-direction-panel/rel\
                eases/download/v1.0.0/lukaspatzke-direction-panel-1.0.0.zip;luk\
                aspatzke-direction-panel"
            GF_UNIFIED_ALERTING_ENABLED: "true"
            GF_ALERTING_ENABLED: "false"

        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.grafana.rule=Host(`grafana.l3s.io`)"
            - "traefik.http.routers.grafana.entrypoints=websecure"
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    grafana-renderer:
        image: grafana/grafana-image-renderer:latest
        container_name: grafana-renderer
        restart: always
        environment:
            ENABLE_METRICS: 'true'

    prometheus:
        image: prom/prometheus:v2.27.1
        container_name: prometheus
        restart: always
        networks:
            - proxy
            - default
        volumes:
            - prometheus:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.retention.time=60d'
            - '--web.enable-admin-api'
            - '--enable-feature=promql-negative-offset'
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.prometheus.rule=Host(`prometheus.l3s.io`)"
            - "traefik.http.routers.prometheus.entrypoints=websecure"
            - "traefik.http.routers.prometheus.middlewares=auth"
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    cadvisor:
        image: gcr.io/google-containers/cadvisor:latest
        container_name: cadvisor
        restart: always
        networks:
            - default
        security_opt:
            - no-new-privileges:true
        volumes:
            - /:/rootfs:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /sys/fs/cgroup:/cgroup:ro
            - /dev/disk/:/dev/disk:ro
        devices:
            - /dev/kmsg:/dev/kmsg
        command:
            - '-housekeeping_interval=10s'
            - '-docker_only=true'
            - '-allow_dynamic_housekeeping=false'

    node-exporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        restart: unless-stopped
        networks:
            - default
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--path.rootfs=/rootfs'
            - '--collector.filesystem.mount-points-exclude="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
            - '--collector.filesystem.fs-types-exclude="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
            - '--collector.powersupplyclass'

    snmp-exporter:
        image: prom/snmp-exporter
        container_name: snmp-exporter
        restart: unless-stopped
        networks:
            - default
        volumes:
          - ./snmp_exporter:/etc/snmp_exporter

    loki:
        image: grafana/loki:2.3.0
        container_name: loki
        restart: always
        ports:
            - 127.0.0.1:3100:3100
        networks:
            - default
            - proxy
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - loki:/loki
            - ./loki.yml:/etc/loki/loki.yml
        command:
            - '-config.file=/etc/loki/loki.yml'
            - '-config.expand-env=true'
        environment:
            - LOKI_ACCESS_KEY_ID=$LOKI_ACCESS_KEY_ID
            - LOKI_ACCESS_KEY_SECRET=$LOKI_ACCESS_KEY_SECRET
        labels:
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    minio:
        image: minio/minio
        container_name: minio
        restart: always
        networks:
            - default
            - proxy
        volumes:
            - minio:/data
        command: server /data --console-address ":9001"
        environment:
            - MINIO_ROOT_USER=admin
            - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
            - MINIO_PROMETHEUS_AUTH_TYPE=public
            - MINIO_PROMETHEUS_URL=http://prometheus:9090
            - MINIO_PROMETHEUS_JOB_ID=minio

            - MINIO_IDENTITY_OPENID_CONFIG_URL=https://auth.l3s.io/realms/l3s/.well-known/openid-configuration
            - MINIO_IDENTITY_OPENID_CLIENT_ID=minio
            - MINIO_IDENTITY_OPENID_CLIENT_SECRET=$MINIO_IDENTITY_OPENID_CLIENT_SECRET
            - MINIO_IDENTITY_OPENID_CLAIM_NAME=policy
            - MINIO_IDENTITY_OPENID_SCOPES=openid,profile,email
            - MINIO_IDENTITY_OPENID_REDIRECT_URI=https://minio.l3s.io/oauth_callback
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.minio.rule=Host(`minio.l3s.io`)"
            - "traefik.http.routers.minio.entrypoints=websecure"
            - "traefik.http.routers.minio.service=minio"
            - "traefik.http.services.minio.loadbalancer.server.port=9001"

            - "traefik.http.routers.minio-storage.rule=Host(`s3.l3s.io`)"
            - "traefik.http.routers.minio-storage.entrypoints=websecure"
            - "traefik.http.routers.minio-storage.service=minio-storage"
            - "traefik.http.services.minio-storage.loadbalancer.server.port=9000"

    promtail:
        image: grafana/promtail:2.2.1
        container_name: promtail
        restart: always
        networks:
            - default
        expose:
            - 1514
        volumes:
            - ./promtail.yml:/etc/promtail/promtail.yml
        command: -config.file=/etc/promtail/promtail.yml

    syslog-ng:
        image: balabit/syslog-ng:latest
        container_name: syslog-ng
        restart: always
        networks:
            - default
        ports:
            - 514:514
            - 514:514/udp
            - 601:601
        command:
            # - --no-caps
            - --stderr
        cap_add:
            - CAP_SYSLOG
        volumes:
            - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf

    unifi-poller:
        image: golift/unifi-poller:latest
        container_name: unifi-poller
        restart: unless-stopped
        environment:
            UP_INFLUXDB_DISABLE: "true"
            UP_POLLER_DEBUG: "false"
            UP_UNIFI_DYNAMIC: "false"
            UP_PROMETHEUS_HTTP_LISTEN: 0.0.0.0:9130
            UP_PROMETHEUS_NAMESPACE: unifipoller
            UP_UNIFI_CONTROLLER_0_PASS: $UP_UNIFI_CONTROLLER_0_PASS
            UP_UNIFI_CONTROLLER_0_SAVE_ALARMS: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_ANOMALIES: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_DPI: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_EVENTS: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_IDS: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_SITES: "true"
            UP_UNIFI_CONTROLLER_0_URL: https://controller.l3s.io
            UP_UNIFI_CONTROLLER_0_USER: lukas
            UP_LOKI_URL: http://loki:3100

networks:
    proxy:
        external: true
    default: null
