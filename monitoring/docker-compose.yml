version: "3.7"

volumes:
    grafana:
    prometheus:
    prometheus-archive:
    loki:

services: 
    grafana:
        image: grafana/grafana:8.0.4
        container_name: grafana
        restart: always
        user: "1000"
        networks:
            - proxy
            - default
        volumes: 
            - grafana:/var/lib/grafana
        environment: 
            GF_SERVER_ROOT_URL: https://grafana.l3s.io/
            GF_SERVER_DOMAIN: grafana.l3s.io
            GF_SESSION_COOKIE_SECURE: "true"
            GF_USERS_AUTO_ASSIGN_ORG: "true"
            GF_AUTH_ANONYMOUS_ENABLED: "false"
            GF_AUTH_BASIC_ENABLED: "false"
            GF_AUTH_PROXY_ENABLED: "false"
            GF_AUTH_PROXY_HEADER_NAME: "X-Forwarded-User"
            GF_AUTH_PROXY_HEADER_PROPERTY: email
            GF_AUTH_PROXY_AUTO_SIGN_UP: "true"
            # GF_AUTH_SIGNOUT_REDIRECT_URL: "https://sso.int.patzke.me/auth/realms/patzke.me/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fforward.sso.int.patzke.me%2F_oauth%2Flogout"
            GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
            GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
            GF_AUTH_GENERIC_OAUTH_NAME: "Keycloak"
            GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
            GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: $GRAFANA_CLIENT_SECRET
            GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email
            GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://sso.l3s.io/auth/realms/l3s/protocol/openid-connect/auth"
            GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://sso.l3s.io/auth/realms/l3s/protocol/openid-connect/token"
            GF_AUTH_GENERIC_OAUTH_API_URL: "https://sso.l3s.io/auth/realms/l3s/protocol/openid-connect/userinfo"
            GF_AUTH_SIGNOUT_REDIRECT_URL: "https://sso.l3s.io/auth/realms/l3s/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.l3s.io"
            GF_SMTP_ENABLED: "true"
            GF_SMTP_HOST: hosted.mailcow.de:465
            GF_SMTP_USER: grafana@patzke.me
            GF_SMTP_PASSWORD: $SMTP_PASSWORD
            GF_SMTP_FROM_ADDRESS: grafana@patzke.me
            GF_RENDERING_SERVER_URL: http://grafana-renderer:8081/render
            GF_RENDERING_CALLBACK_URL: http://grafana:3000/
            GF_LOG_FILTERS: rendering:debug
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.grafana.rule=Host(`grafana.l3s.io`)"
            - "traefik.http.routers.grafana.entrypoints=websecure"
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    grafana-renderer:
        image: grafana/grafana-image-renderer:latest
        container_name: grafana-renderer
        environment:
            ENABLE_METRICS: 'true'
    
    prometheus:
        image: prom/prometheus:v2.27.1
        container_name: prometheus
        restart: always
        networks: 
            - proxy
            - default
        volumes: 
            - prometheus:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command: 
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.retention.time=60d'
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.prometheus.rule=Host(`prometheus.l3s.io`)"
            - "traefik.http.routers.prometheus.entrypoints=websecure"
            - "traefik.http.routers.prometheus.middlewares=auth"
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    prometheus-archive:
        image: prom/prometheus:v2.27.1
        container_name: prometheus-archive
        restart: always
        networks: 
            - proxy
            - default
        volumes: 
            - prometheus-archive:/prometheus
            - ./prometheus-archive.yml:/etc/prometheus/prometheus-archive.yml
        command: 
            - '--config.file=/etc/prometheus/prometheus-archive.yml'
            - '--storage.tsdb.retention.time=2y'
        labels: 
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.prometheus-archive.rule=Host(`archive.prometheus.l3s.io`)"
            - "traefik.http.routers.prometheus-archive.entrypoints=websecure"
            - "traefik.http.routers.prometheus-archive.middlewares=auth"
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    cadvisor:
        image: gcr.io/google-containers/cadvisor:latest
        container_name: cadvisor
        restart: always
        networks: 
            - default
        volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        command:
            - '--housekeeping_interval=10s'
            - '--docker_only'

    node-exporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        restart: unless-stopped
        networks: 
            - default
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--path.rootfs=/rootfs'
            - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
            - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'

    loki:
        image: grafana/loki:2.2.1
        container_name: loki
        restart: always
        ports:
            - 3100:3100
        networks: 
            - default
            - proxy
        volumes: 
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - loki:/loki
            - ./loki.yml:/etc/loki/loki.yml
        command: -config.file=/etc/loki/loki.yml
        labels: 
            - "diun.watch_repo=true"
            - "diun.include_tags=latest"

    promtail:
        image: grafana/promtail:2.2.1
        container_name: promtail
        restart: always
        networks: 
            - default
        expose:
            - 1514
        volumes: 
            - ./promtail.yml:/etc/promtail/promtail.yml
        command: -config.file=/etc/promtail/promtail.yml

    syslog-ng:
        image: balabit/syslog-ng:latest
        container_name: syslog-ng
        restart: always
        networks: 
            - default
        ports: 
            - 514:514
            - 514:514/udp
            - 601:601
        command: 
            # - --no-caps
            - --stderr
        cap_add: 
            - CAP_SYSLOG
        volumes: 
            - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf

    unifi-poller:
        image: golift/unifi-poller:latest
        container_name: unifi-poller
        restart: unless-stopped
        environment:
            UP_INFLUXDB_DISABLE: "true"
            UP_POLLER_DEBUG: "false"
            UP_UNIFI_DYNAMIC: "false"
            UP_PROMETHEUS_HTTP_LISTEN: 0.0.0.0:9130
            UP_PROMETHEUS_NAMESPACE: unifipoller
            UP_UNIFI_CONTROLLER_0_PASS: $UP_UNIFI_CONTROLLER_0_PASS
            UP_UNIFI_CONTROLLER_0_SAVE_ALARMS: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_ANOMALIES: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_DPI: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_EVENTS: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_IDS: "true"
            UP_UNIFI_CONTROLLER_0_SAVE_SITES: "true"
            UP_UNIFI_CONTROLLER_0_URL: https://unifi.l3s.io
            UP_UNIFI_CONTROLLER_0_USER: unifipoller
            UP_LOKI_URL: http://loki:3100
        
networks: 
    proxy:
        external: true
    default:
